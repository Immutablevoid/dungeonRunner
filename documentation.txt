#--- Documentation ---#
Author of Code: Simon Pablo HEPPNER
Github Repository of game: https://github.com/spheppner/dungeonRunner

--- Game ---
Name: Dungeon of Math
The goal of the game is to survive until the 15th dungeon.

-- Legend --
"@": that is the player
"<": a stair leading down into the next level (next dungeon)
"1, 2, 3, 4": Monsters, the higher the number of it, the stronger it is
"#": Wall, you can't go against it, except you dig it (digging mode, explanation following)
"0": Coin, you can collect it (you can't use it yet, explanation following)
"+": shop, but you can't buy anything yet
"-": exit sign

-- Keybinds --
"W": up
"A": left
"S": down
"D": right
"LShift" + "W", "A", "S" or "D": digging mode (you dig in the direction that you pressed LShift with)

-- Fight between Monster and Player --
Option 1: If the monster attacks the player, the player can flee
Option 2: If the player engages the fight, he must end the fight or die in it, but he can't flee
If fight is engaged player needs to enter the answer to a multiplication that is randomly generated and shown in the lower left corner. Player has ten seconds to answer
Damage that is dealen = left time * multiplicant variable that is defined in class of Player()

-- What will follow -- (after U19 Create Your World Competition)
- Working Shop
- Damage-Multiplicant of Player will be shown in the shop to be bought
- License to dig Gold and get coins from it will be shown in the shop to be bought
- Other Monsters, more Monsters will be added
- Small Bugs will be fixed

#--- Beschreibung zum Projekt (für U19 Create Your World) ---#
Ich habe dieses Projekt am 27. November 2018 begonnen, mit der Idee ein rogue-like Spiel für die Ars Electronica zu schreiben. Am Anfang bestand das Spiel nur aus Zeichen wo man mit einem @ in einem Labyrinth, welches zufällig generiert wurde und zweidimensional angezeigt wurde, herumgelaufen ist. Dann habe ich noch ein Programm geschrieben, welches das Labyrinth einliest und dann als Graphik anzeigt. Z.B. wäre dann eine Mauer ein grünes Viereck und ein Boden einfach weiss. Das Spiel wird zwar nur zweidimensional angezeigt, doch eigentlich hat es drei Dimensionen, denn man kann Treppen die am Boden liegen hinunterlaufen und somit auf eine neue Ebene kommen. Derzeit hat das Spiel noch nicht wirklich ein Ziel, außer, dass man auf die 15. Ebene gelangen muss damit man gewinnt. Trotzdem habe ich sehr viel Mühe in das Spiel gesteckt. Noch einmal ein dickes Dankeschön an meinen Programmierlehrer von spielend-programmieren, dass er mir so viel über das Programmieren in Python beigebracht hat.
